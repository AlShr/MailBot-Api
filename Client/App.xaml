<Application x:Class="MailBot.Client.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
             Startup="OnStartup">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Resources/Icons.xaml" />
                <ResourceDictionary
                    Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.Buttons.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/FlatButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                <ResourceDictionary
                    Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="DefaultWindowStyle" TargetType="{x:Type controls:MetroWindow}">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="GlowBrush" Value="Black" />
                <Setter Property="WindowTransitionsEnabled" Value="False" />
            </Style>

            <Style x:Key="MarginStyle" TargetType="{x:Type Control}">
                <Setter Property="Margin" Value="8,8,8,8" />
            </Style>

            <Style x:Key="DefaultTextBox" TargetType="{x:Type Control}">
                <Setter Property="VerticalAlignment" Value="Stretch" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="HorizontalContentAlignment" Value="Left" />
                <Setter Property="Margin" Value="8,8,8,8" />
            </Style>

            <Style x:Key="MailPanelGrid" TargetType="{x:Type Grid}" />

            <Style x:Key="ThreadStack" TargetType="{x:Type StackPanel}">
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="VerticalAlignment" Value="Stretch" />
            </Style>

            <Style x:Key="DefaultSplitter" TargetType="GridSplitter">
                <Setter Property="VerticalAlignment" Value="Stretch" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="BorderThickness" Value="5" />
                <Setter Property="BorderBrush" Value="{StaticResource AccentColorBrush4}" />
            </Style>

            <Style x:Key="DefaultPasswordBox" TargetType="{x:Type PasswordBox}">
                <Setter Property="VerticalAlignment" Value="Stretch" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="HorizontalContentAlignment" Value="Left" />
                <Setter Property="Margin" Value="8,8,8,8" />
            </Style>

            <Style x:Key="DefaultButton" TargetType="{x:Type Button}" BasedOn="{StaticResource SquareButtonStyle}">
                <Setter Property="Margin" Value="8,8,8,8" />
                <Setter Property="Focusable" Value="False" />
            </Style>

            <Style x:Key="MailStackPanel" TargetType="{x:Type StackPanel}">
                <Setter Property="Background" Value="{StaticResource AccentColorBrush4}" />
                <Style.Triggers>
                    <EventTrigger RoutedEvent="Loaded">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Duration="0:0:0.300"
                                                     Storyboard.TargetProperty="Background.(SolidColorBrush.Opacity)"
                                                     To="0.0" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="MouseEnter">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Duration="0:0:0.300"
                                                     Storyboard.TargetProperty="Background.(SolidColorBrush.Opacity)"
                                                     To="1.0" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="MouseLeave">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Duration="0:0:0.300"
                                                     Storyboard.TargetProperty="Background.(SolidColorBrush.Opacity)"
                                                     To="0.0" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="DefaultCircleButton" TargetType="{x:Type Button}"
                   BasedOn="{StaticResource MetroCircleButtonStyle}">
                <Setter Property="Margin" Value="8,8,8,8" />
            </Style>

            <Style x:Key="MarginTextBlock" TargetType="{x:Type TextBlock}">
                <Setter Property="Margin" Value="8,0,8,0" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Left" />
            </Style>

            <Style x:Key="MailSenderTextBlock" TargetType="{x:Type TextBlock}"
                   BasedOn="{StaticResource MarginTextBlock}">
                <Setter Property="FontSize" Value="12" />
                <Setter Property="MaxHeight" Value="16" />
            </Style>

            <Style x:Key="MailSubjectTextBlock" TargetType="{x:Type TextBlock}"
                   BasedOn="{StaticResource MarginTextBlock}">
                <Setter Property="FontSize" Value="11" />
                <Setter Property="MaxHeight" Value="15" />
            </Style>

            <Style x:Key="MailBodyPreviewTextBlock" TargetType="{x:Type TextBlock}"
                   BasedOn="{StaticResource MarginTextBlock}">
                <Setter Property="FontSize" Value="10" />
                <Setter Property="MaxHeight" Value="14" />
                <Setter Property="FontStyle" Value="Italic" />
                <Setter Property="Foreground" Value="DimGray" />
            </Style>

            <Style x:Key="DateTextBlock" TargetType="{x:Type TextBlock}"
                   BasedOn="{StaticResource MarginTextBlock}">
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="FontSize" Value="10" />
                <Setter Property="MaxHeight" Value="14" />
            </Style>

            <Style x:Key="CredentialsTextBlock" TargetType="{x:Type TextBlock}">
                <Setter Property="Margin" Value="8,8,8,8" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Right" />
            </Style>

        </ResourceDictionary>
    </Application.Resources>
</Application>