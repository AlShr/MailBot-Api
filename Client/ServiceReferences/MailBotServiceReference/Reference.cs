//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MailBot.Client.MailBotServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserProxy", Namespace="http://schemas.datacontract.org/2004/07/MailBot.Service.MailBotServiceDTO")]
    [System.SerializableAttribute()]
    public partial class UserProxy : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TrackedFault", Namespace="http://schemas.datacontract.org/2004/07/MailBot.Service.MailBotServiceDTO")]
    [System.SerializableAttribute()]
    public partial class TrackedFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateAndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid TrakingIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateAndTime {
            get {
                return this.DateAndTimeField;
            }
            set {
                if ((this.DateAndTimeField.Equals(value) != true)) {
                    this.DateAndTimeField = value;
                    this.RaisePropertyChanged("DateAndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid TrakingId {
            get {
                return this.TrakingIdField;
            }
            set {
                if ((this.TrakingIdField.Equals(value) != true)) {
                    this.TrakingIdField = value;
                    this.RaisePropertyChanged("TrakingId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmailAddressProxy", Namespace="http://schemas.datacontract.org/2004/07/MailBot.Service.MailBotServiceDTO")]
    [System.SerializableAttribute()]
    public partial class EmailAddressProxy : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MailBot.Client.MailBotServiceReference.UserProxy OwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MailBot.Client.MailBotServiceReference.VerificationKeyProxy VerificationKeyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MailBot.Client.MailBotServiceReference.UserProxy Owner {
            get {
                return this.OwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerField, value) != true)) {
                    this.OwnerField = value;
                    this.RaisePropertyChanged("Owner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MailBot.Client.MailBotServiceReference.VerificationKeyProxy VerificationKey {
            get {
                return this.VerificationKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.VerificationKeyField, value) != true)) {
                    this.VerificationKeyField = value;
                    this.RaisePropertyChanged("VerificationKey");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VerificationKeyProxy", Namespace="http://schemas.datacontract.org/2004/07/MailBot.Service.MailBotServiceDTO")]
    [System.SerializableAttribute()]
    public partial class VerificationKeyProxy : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MailBot.Client.MailBotServiceReference.EmailAddressProxy EmailAdressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MailBot.Client.MailBotServiceReference.EmailAddressProxy EmailAdress {
            get {
                return this.EmailAdressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAdressField, value) != true)) {
                    this.EmailAdressField = value;
                    this.RaisePropertyChanged("EmailAdress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MailMessageProxy", Namespace="http://schemas.datacontract.org/2004/07/MailBot.Service.MailBotServiceDTO")]
    [System.SerializableAttribute()]
    public partial class MailMessageProxy : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MailBot.Client.MailBotServiceReference.AttachmentProxy[] AttachmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MailBot.Client.MailBotServiceReference.EmailAddressProxy[] RecipientsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MailBot.Client.MailBotServiceReference.EmailAddressProxy SenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubjectField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MailBot.Client.MailBotServiceReference.AttachmentProxy[] Attachments {
            get {
                return this.AttachmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.AttachmentsField, value) != true)) {
                    this.AttachmentsField = value;
                    this.RaisePropertyChanged("Attachments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Body {
            get {
                return this.BodyField;
            }
            set {
                if ((object.ReferenceEquals(this.BodyField, value) != true)) {
                    this.BodyField = value;
                    this.RaisePropertyChanged("Body");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MailBot.Client.MailBotServiceReference.EmailAddressProxy[] Recipients {
            get {
                return this.RecipientsField;
            }
            set {
                if ((object.ReferenceEquals(this.RecipientsField, value) != true)) {
                    this.RecipientsField = value;
                    this.RaisePropertyChanged("Recipients");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MailBot.Client.MailBotServiceReference.EmailAddressProxy Sender {
            get {
                return this.SenderField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderField, value) != true)) {
                    this.SenderField = value;
                    this.RaisePropertyChanged("Sender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Subject {
            get {
                return this.SubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectField, value) != true)) {
                    this.SubjectField = value;
                    this.RaisePropertyChanged("Subject");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AttachmentProxy", Namespace="http://schemas.datacontract.org/2004/07/MailBot.Service.MailBotServiceDTO")]
    [System.SerializableAttribute()]
    public partial class AttachmentProxy : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ContentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MailBot.Client.MailBotServiceReference.MailMessageProxy MailField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Contents {
            get {
                return this.ContentsField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentsField, value) != true)) {
                    this.ContentsField = value;
                    this.RaisePropertyChanged("Contents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MailBot.Client.MailBotServiceReference.MailMessageProxy Mail {
            get {
                return this.MailField;
            }
            set {
                if ((object.ReferenceEquals(this.MailField, value) != true)) {
                    this.MailField = value;
                    this.RaisePropertyChanged("Mail");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GroupProxy", Namespace="http://schemas.datacontract.org/2004/07/MailBot.Service.MailBotServiceDTO")]
    [System.SerializableAttribute()]
    public partial class GroupProxy : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MailBot.Client.MailBotServiceReference.EmailAddressProxy GroupAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MailBot.Client.MailBotServiceReference.UserProxy[] UsersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MailBot.Client.MailBotServiceReference.EmailAddressProxy GroupAddress {
            get {
                return this.GroupAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupAddressField, value) != true)) {
                    this.GroupAddressField = value;
                    this.RaisePropertyChanged("GroupAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupName {
            get {
                return this.GroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNameField, value) != true)) {
                    this.GroupNameField = value;
                    this.RaisePropertyChanged("GroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MailBot.Client.MailBotServiceReference.UserProxy[] Users {
            get {
                return this.UsersField;
            }
            set {
                if ((object.ReferenceEquals(this.UsersField, value) != true)) {
                    this.UsersField = value;
                    this.RaisePropertyChanged("Users");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MailBotServiceReference.IMailBotService")]
    public interface IMailBotService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMailBotService/AuthenticateUser", ReplyAction="http://tempuri.org/IMailBotService/AuthenticateUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MailBot.Client.MailBotServiceReference.TrackedFault), Action="http://tempuri.org/IMailBotService/AuthenticateUserTrackedFaultFault", Name="TrackedFault", Namespace="http://schemas.datacontract.org/2004/07/MailBot.Service.MailBotServiceDTO")]
        MailBot.Client.MailBotServiceReference.UserProxy AuthenticateUser(MailBot.Client.MailBotServiceReference.UserProxy credentials);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMailBotService/AuthenticateUser", ReplyAction="http://tempuri.org/IMailBotService/AuthenticateUserResponse")]
        System.Threading.Tasks.Task<MailBot.Client.MailBotServiceReference.UserProxy> AuthenticateUserAsync(MailBot.Client.MailBotServiceReference.UserProxy credentials);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMailBotService/RegisterUser", ReplyAction="http://tempuri.org/IMailBotService/RegisterUserResponse")]
        MailBot.Client.MailBotServiceReference.UserProxy RegisterUser(MailBot.Client.MailBotServiceReference.UserProxy credentials);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMailBotService/RegisterUser", ReplyAction="http://tempuri.org/IMailBotService/RegisterUserResponse")]
        System.Threading.Tasks.Task<MailBot.Client.MailBotServiceReference.UserProxy> RegisterUserAsync(MailBot.Client.MailBotServiceReference.UserProxy credentials);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMailBotService/AddEmailAddress", ReplyAction="http://tempuri.org/IMailBotService/AddEmailAddressResponse")]
        MailBot.Client.MailBotServiceReference.EmailAddressProxy AddEmailAddress(MailBot.Client.MailBotServiceReference.UserProxy credentials, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMailBotService/AddEmailAddress", ReplyAction="http://tempuri.org/IMailBotService/AddEmailAddressResponse")]
        System.Threading.Tasks.Task<MailBot.Client.MailBotServiceReference.EmailAddressProxy> AddEmailAddressAsync(MailBot.Client.MailBotServiceReference.UserProxy credentials, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMailBotService/VerifyEmailAddress", ReplyAction="http://tempuri.org/IMailBotService/VerifyEmailAddressResponse")]
        MailBot.Client.MailBotServiceReference.VerificationKeyProxy VerifyEmailAddress(MailBot.Client.MailBotServiceReference.UserProxy userInfo, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMailBotService/VerifyEmailAddress", ReplyAction="http://tempuri.org/IMailBotService/VerifyEmailAddressResponse")]
        System.Threading.Tasks.Task<MailBot.Client.MailBotServiceReference.VerificationKeyProxy> VerifyEmailAddressAsync(MailBot.Client.MailBotServiceReference.UserProxy userInfo, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMailBotService/ConfirmVerificationCode", ReplyAction="http://tempuri.org/IMailBotService/ConfirmVerificationCodeResponse")]
        bool ConfirmVerificationCode(string email, string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMailBotService/ConfirmVerificationCode", ReplyAction="http://tempuri.org/IMailBotService/ConfirmVerificationCodeResponse")]
        System.Threading.Tasks.Task<bool> ConfirmVerificationCodeAsync(string email, string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMailBotService/GetAllMessagesForUser", ReplyAction="http://tempuri.org/IMailBotService/GetAllMessagesForUserResponse")]
        MailBot.Client.MailBotServiceReference.MailMessageProxy[] GetAllMessagesForUser(MailBot.Client.MailBotServiceReference.UserProxy userInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMailBotService/GetAllMessagesForUser", ReplyAction="http://tempuri.org/IMailBotService/GetAllMessagesForUserResponse")]
        System.Threading.Tasks.Task<MailBot.Client.MailBotServiceReference.MailMessageProxy[]> GetAllMessagesForUserAsync(MailBot.Client.MailBotServiceReference.UserProxy userInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMailBotService/GetUserMailboxes", ReplyAction="http://tempuri.org/IMailBotService/GetUserMailboxesResponse")]
        MailBot.Client.MailBotServiceReference.EmailAddressProxy[] GetUserMailboxes(MailBot.Client.MailBotServiceReference.UserProxy proxy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMailBotService/GetUserMailboxes", ReplyAction="http://tempuri.org/IMailBotService/GetUserMailboxesResponse")]
        System.Threading.Tasks.Task<MailBot.Client.MailBotServiceReference.EmailAddressProxy[]> GetUserMailboxesAsync(MailBot.Client.MailBotServiceReference.UserProxy proxy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMailBotService/RegesterGroup", ReplyAction="http://tempuri.org/IMailBotService/RegesterGroupResponse")]
        MailBot.Client.MailBotServiceReference.GroupProxy RegesterGroup(string groupName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMailBotService/RegesterGroup", ReplyAction="http://tempuri.org/IMailBotService/RegesterGroupResponse")]
        System.Threading.Tasks.Task<MailBot.Client.MailBotServiceReference.GroupProxy> RegesterGroupAsync(string groupName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMailBotService/IsServiceConfigured", ReplyAction="http://tempuri.org/IMailBotService/IsServiceConfiguredResponse")]
        bool IsServiceConfigured();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMailBotService/IsServiceConfigured", ReplyAction="http://tempuri.org/IMailBotService/IsServiceConfiguredResponse")]
        System.Threading.Tasks.Task<bool> IsServiceConfiguredAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMailBotService/SearchInMessages", ReplyAction="http://tempuri.org/IMailBotService/SearchInMessagesResponse")]
        MailBot.Client.MailBotServiceReference.MailMessageProxy[] SearchInMessages(string searchQuery, string[] fields);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMailBotService/SearchInMessages", ReplyAction="http://tempuri.org/IMailBotService/SearchInMessagesResponse")]
        System.Threading.Tasks.Task<MailBot.Client.MailBotServiceReference.MailMessageProxy[]> SearchInMessagesAsync(string searchQuery, string[] fields);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMailBotServiceChannel : MailBot.Client.MailBotServiceReference.IMailBotService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MailBotServiceClient : System.ServiceModel.ClientBase<MailBot.Client.MailBotServiceReference.IMailBotService>, MailBot.Client.MailBotServiceReference.IMailBotService {
        
        public MailBotServiceClient() {
        }
        
        public MailBotServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MailBotServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MailBotServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MailBotServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MailBot.Client.MailBotServiceReference.UserProxy AuthenticateUser(MailBot.Client.MailBotServiceReference.UserProxy credentials) {
            return base.Channel.AuthenticateUser(credentials);
        }
        
        public System.Threading.Tasks.Task<MailBot.Client.MailBotServiceReference.UserProxy> AuthenticateUserAsync(MailBot.Client.MailBotServiceReference.UserProxy credentials) {
            return base.Channel.AuthenticateUserAsync(credentials);
        }
        
        public MailBot.Client.MailBotServiceReference.UserProxy RegisterUser(MailBot.Client.MailBotServiceReference.UserProxy credentials) {
            return base.Channel.RegisterUser(credentials);
        }
        
        public System.Threading.Tasks.Task<MailBot.Client.MailBotServiceReference.UserProxy> RegisterUserAsync(MailBot.Client.MailBotServiceReference.UserProxy credentials) {
            return base.Channel.RegisterUserAsync(credentials);
        }
        
        public MailBot.Client.MailBotServiceReference.EmailAddressProxy AddEmailAddress(MailBot.Client.MailBotServiceReference.UserProxy credentials, string email) {
            return base.Channel.AddEmailAddress(credentials, email);
        }
        
        public System.Threading.Tasks.Task<MailBot.Client.MailBotServiceReference.EmailAddressProxy> AddEmailAddressAsync(MailBot.Client.MailBotServiceReference.UserProxy credentials, string email) {
            return base.Channel.AddEmailAddressAsync(credentials, email);
        }
        
        public MailBot.Client.MailBotServiceReference.VerificationKeyProxy VerifyEmailAddress(MailBot.Client.MailBotServiceReference.UserProxy userInfo, string email) {
            return base.Channel.VerifyEmailAddress(userInfo, email);
        }
        
        public System.Threading.Tasks.Task<MailBot.Client.MailBotServiceReference.VerificationKeyProxy> VerifyEmailAddressAsync(MailBot.Client.MailBotServiceReference.UserProxy userInfo, string email) {
            return base.Channel.VerifyEmailAddressAsync(userInfo, email);
        }
        
        public bool ConfirmVerificationCode(string email, string code) {
            return base.Channel.ConfirmVerificationCode(email, code);
        }
        
        public System.Threading.Tasks.Task<bool> ConfirmVerificationCodeAsync(string email, string code) {
            return base.Channel.ConfirmVerificationCodeAsync(email, code);
        }
        
        public MailBot.Client.MailBotServiceReference.MailMessageProxy[] GetAllMessagesForUser(MailBot.Client.MailBotServiceReference.UserProxy userInfo) {
            return base.Channel.GetAllMessagesForUser(userInfo);
        }
        
        public System.Threading.Tasks.Task<MailBot.Client.MailBotServiceReference.MailMessageProxy[]> GetAllMessagesForUserAsync(MailBot.Client.MailBotServiceReference.UserProxy userInfo) {
            return base.Channel.GetAllMessagesForUserAsync(userInfo);
        }
        
        public MailBot.Client.MailBotServiceReference.EmailAddressProxy[] GetUserMailboxes(MailBot.Client.MailBotServiceReference.UserProxy proxy) {
            return base.Channel.GetUserMailboxes(proxy);
        }
        
        public System.Threading.Tasks.Task<MailBot.Client.MailBotServiceReference.EmailAddressProxy[]> GetUserMailboxesAsync(MailBot.Client.MailBotServiceReference.UserProxy proxy) {
            return base.Channel.GetUserMailboxesAsync(proxy);
        }
        
        public MailBot.Client.MailBotServiceReference.GroupProxy RegesterGroup(string groupName) {
            return base.Channel.RegesterGroup(groupName);
        }
        
        public System.Threading.Tasks.Task<MailBot.Client.MailBotServiceReference.GroupProxy> RegesterGroupAsync(string groupName) {
            return base.Channel.RegesterGroupAsync(groupName);
        }
        
        public bool IsServiceConfigured() {
            return base.Channel.IsServiceConfigured();
        }
        
        public System.Threading.Tasks.Task<bool> IsServiceConfiguredAsync() {
            return base.Channel.IsServiceConfiguredAsync();
        }
        
        public MailBot.Client.MailBotServiceReference.MailMessageProxy[] SearchInMessages(string searchQuery, string[] fields) {
            return base.Channel.SearchInMessages(searchQuery, fields);
        }
        
        public System.Threading.Tasks.Task<MailBot.Client.MailBotServiceReference.MailMessageProxy[]> SearchInMessagesAsync(string searchQuery, string[] fields) {
            return base.Channel.SearchInMessagesAsync(searchQuery, fields);
        }
    }
}
